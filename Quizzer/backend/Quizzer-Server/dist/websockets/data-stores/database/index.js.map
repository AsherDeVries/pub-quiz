{"version":3,"sources":["../../../../src/websockets/data-stores/database/index.js"],"names":["DatabaseCacheHandler","saveNewQuiznightRoundToCache","quiznightCode","newRoundNumber","findOne","_id","rounds","then","result","length","update","$push","teamStatistics","teams","quiznight","promises","teamName","p","$elemMatch","team","givenAnswers","correctAnswersAmount","push","Promise","all","removeTeamInQuiznightFromCache","$pull","saveNewTeamInQuiznightToCache","roundPoints","incrementCorrectAnswersOfTeam","round","console","log","$set","saveAnswerOfTeamInRoundToCache","question","answer","givenAnswersInRound","i","value","updateQuestionToReviewed","removeQuiznight","remove"],"mappings":"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","file":"index.js","sourcesContent":["import Quiznight from '../../../models/Quiznight';\n\nconst DatabaseCacheHandler = {\n  saveNewQuiznightRoundToCache(quiznightCode) {\n    // YEAH... QUICK AND DIRTY\n    let newRoundNumber = null;\n\n    return Quiznight.findOne({ _id: quiznightCode }, { rounds: 1 })\n      .then((result) => {\n        newRoundNumber = result.rounds.length+1;\n        return Quiznight\n          .update(\n            { _id: quiznightCode },\n            { $push: { rounds: { _id: newRoundNumber, teamStatistics: [] } } });\n      })\n      .then(() => {\n        return Quiznight.findOne({ _id: quiznightCode }, { teams: 1 });\n      })\n      .then((quiznight) => {\n        let promises = [];\n        for(let teamName of quiznight.teams) {\n          let p = Quiznight.update(\n            { _id: quiznightCode, rounds: { $elemMatch: { _id: newRoundNumber } } },\n            { $push: { \"rounds.0.teamStatistics\": { team: teamName, givenAnswers: [], correctAnswersAmount: 0 } } })\n          promises.push(p);\n        }\n        return Promise.all(promises);\n      });\n  },\n  removeTeamInQuiznightFromCache(quiznightCode, teamName) {\n    return Quiznight.update(\n      { _id: quiznightCode },\n      { $pull: { teams: { _id: teamName } } }\n    );\n  },\n  saveNewTeamInQuiznightToCache(quiznightCode, teamName) {\n    return Quiznight.update(\n      { _id: quiznightCode },\n      { $push: { teams: { _id: teamName, roundPoints: 0 } } }\n    );\n  },\n  incrementCorrectAnswersOfTeam(quiznightCode, round, teamName) {\n    return Quiznight.findOne({ \n      _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } } \n    })\n    .then((quiznight) => {\n      let correctAnswersAmount = quiznight.rounds[0].teamStatistics[0].correctAnswersAmount;\n      console.log(quiznight.rounds[0].teamStatistics[0]);\n      correctAnswersAmount++;\n\n      return Quiznight.update(\n        { _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } } },\n        { $set: { \"rounds.0.teamStatistics.0.correctAnswersAmount\": correctAnswersAmount } }\n      );\n    });\n  },\n  saveAnswerOfTeamInRoundToCache(quiznightCode, round, teamName, question, answer) {\n    return Quiznight.findOne({ \n      _id: quiznightCode, rounds: { $elemMatch: { _id: round } },\n      \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } }\n    })\n    .then((quiznight) => {\n      let givenAnswersInRound = quiznight.rounds[0].teamStatistics[0].givenAnswers;\n\n      // The Marius rule: \"If it works... It works\"\n      if(givenAnswersInRound.length > 0) {\n        for(let i = 0; i < givenAnswersInRound.length; i++) {\n          if(givenAnswersInRound[i].question == question) {\n            givenAnswersInRound[i].value = answer;\n            return Quiznight.update(\n              { _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } } },\n              { $set: { \"rounds.0.teamStatistics.0.givenAnswers\": givenAnswersInRound } }\n            );\n          }\n        }\n      } else {\n        return Quiznight.update(\n          { _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } } },\n          { $push: { \"rounds.0.teamStatistics.0.givenAnswers\": { question: question, value: answer } } }\n        );\n      }\n    })\n  },\n  updateQuestionToReviewed(quiznightCode, round, question) {\n    return Quiznight.update(\n      { _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.chosenQuestions\" : { $elemMatch: { _id: question } } },\n      { $set: { \"rounds.0.chosenQuestions.0.hasBeenReviewed\": true } }\n    );\n  },\n  removeQuiznight(quiznightCode) {\n    return Quiznight.remove({\n      _id: quiznightCode\n    })\n  }\n};\n\nexport default DatabaseCacheHandler;"]}