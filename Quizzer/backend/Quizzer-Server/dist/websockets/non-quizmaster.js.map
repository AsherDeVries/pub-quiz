<<<<<<< Updated upstream
{"version":3,"sources":["../../src/websockets/non-quizmaster.js"],"names":["quiznightCode","quiznightNamespace","webSocketServer","of","on","socket","emit","PENDING","nsp","name","CONNECT_TEAM","message","update","_id","substr","$push","teams","teamName","roundPoints","then","to","id"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,aAAD,EAAmB;AAChC,MAAIC,qBAAqB,cAAIC,eAAJ,CAAoBC,EAApB,CAAuB,MAAMH,aAA7B,CAAzB;;AAEAC,qBAAmBG,EAAnB,CAAsB,YAAtB,EAAoC,UAACC,MAAD,EAAY;AAC9CA,WAAOC,IAAP,CAAY,wBAAcC,OAA1B,2CAA0EF,OAAOG,GAAP,CAAWC,IAArF;AACA;;AAEAJ,WAAOD,EAAP,CAAU,wBAAcM,YAAxB,EAAsC,UAACC,OAAD,EAAa;AACjD,0BAAUC,MAAV,CACE,EAAEC,KAAKR,OAAOG,GAAP,CAAWC,IAAX,CAAgBK,MAAhB,CAAuB,CAAvB,CAAP,EADF,EAEE,EAAEC,OAAO,EAAEC,OAAO,EAAEH,KAAKF,QAAQM,QAAf,EAAyBC,aAAa,CAAtC,EAAT,EAAT,EAFF,EAGGC,IAHH,CAGQ,cAAIjB,eAAJ,CAAoBkB,EAApB,CAAuB,iBAAvB,EAA0Cd,IAA1C,CAA+C,SAA/C,EAA0D;AAC9D,+CAAsCK,QAAQM,QAA9C,0BAA2EZ,OAAOgB,EAAlF,qDAAoIhB,OAAOG,GAAP,CAAWC;AADjF,OAA1D,CAHR;AAMC,KAPH;AAQC,GAZH;;AAcA,SAAOR,kBAAP;AACD,C","file":"non-quizmaster.js","sourcesContent":["import app from '../app';\nimport Quiznight from '../models/Quiznight';\nimport MESSAGE_TYPES from './constants/message_types';\n\nexport default (quiznightCode) => {\n  let quiznightNamespace = app.webSocketServer.of('/' + quiznightCode);\n\n  quiznightNamespace.on('connection', (socket) => {\n    socket.emit(MESSAGE_TYPES.PENDING, `Welcome to the quiznight with code: ${socket.nsp.name}! Send your teamname to join.`);\n    // TODO: refactor code below to redirect quizmaster to created namespace\n    \n    socket.on(MESSAGE_TYPES.CONNECT_TEAM, (message) => {\n      Quiznight.update(\n        { _id: socket.nsp.name.substr(1) },\n        { $push: { teams: { _id: message.teamName, roundPoints: 0 } } })\n        .then(app.webSocketServer.to('QUIZMASTER_ROOM').emit('PENDING', { \n          'message' : `A new team with name: \"${message.teamName}\" and socket id: \"${socket.id}\" is waiting to join the quiznight with code ${socket.nsp.name}` \n        }));\n      });\n    });\n\n  return quiznightNamespace;\n}"]}
=======
{"version":3,"sources":["../../src/websockets/non-quizmaster.js"],"names":["quiznightCode","quiznightNamespace","webSocketServer","of","on","socket","join","to","emit","message","update","_id","nsp","name","substr","$push","teams","teamName","roundPoints","then","id"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;kBAEe,UAACA,aAAD,EAAmB;AAChC,MAAIC,qBAAqB,cAAIC,eAAJ,CAAoBC,EAApB,CAAuB,MAAMH,aAA7B,CAAzB;;AAEAC,qBAAmBG,EAAnB,CAAsB,YAAtB,EAAoC,UAACC,MAAD,EAAY;AAC9CA,WAAOD,EAAP,CAAU,oBAAV,EAAgC,YAAM;AACpCC,aAAOC,IAAP,CAAY,iBAAZ;AACA,oBAAIJ,eAAJ,CAAoBK,EAApB,CAAuB,iBAAvB,EAA0CC,IAA1C,CAA+C,SAA/C;AACD,KAHD;AAIAH,WAAOG,IAAP,CAAY,SAAZ;AACA;;AAEAH,WAAOD,EAAP,CAAU,cAAV,EAA0B,UAACK,OAAD,EAAa;AACrC,0BAAUC,MAAV,CACE,EAAEC,KAAKN,OAAOO,GAAP,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,CAAvB,CAAP,EADF,EAEE,EAAEC,OAAO,EAAEC,OAAO,EAAEL,KAAKF,QAAQQ,QAAf,EAAyBC,aAAa,CAAtC,EAAT,EAAT,EAFF,EAGGC,IAHH,CAGQ,cAAIjB,eAAJ,CAAoBK,EAApB,CAAuB,iBAAvB,EAA0CC,IAA1C,CAA+C,SAA/C,EAA0D;AAC9D,+CAAsCC,QAAQQ,QAA9C,0BAA2EZ,OAAOe,EAAlF,qDAAoIf,OAAOO,GAAP,CAAWC;AADjF,OAA1D,CAHR;AAMD,KAPD;;AASAR,WAAOD,EAAP,CAAU,eAAV,EAA2B,UAACK,OAAD,EAAa,CAEvC,CAFD;AAGD,GApBD;;AAsBA,SAAOR,kBAAP;AACD,C","file":"non-quizmaster.js","sourcesContent":["import app from '../app';\nimport Quiznight from '../models/Quiznight';\nimport { isQuizmaster } from './server';\n\nexport default (quiznightCode) => {\n  let quiznightNamespace = app.webSocketServer.of('/' + quiznightCode);\n\n  quiznightNamespace.on('connection', (socket) => {\n    socket.on('CONNECT_QUIZMASTER', () => {\n      socket.join('QUIZMASTER_ROOM');\n      app.webSocketServer.to('QUIZMASTER_ROOM').emit('PENDING', `Welcome to the quiznight quizmaster!, waiting for teams to apply..`);\n    });\n    socket.emit('PENDING', `Welcome to the quiznight! Send your teamname to join.`);\n    // TODO: refactor code below to redirect quizmaster to created namespace\n    \n    socket.on('CONNECT_TEAM', (message) => {\n      Quiznight.update(\n        { _id: socket.nsp.name.substr(1) },\n        { $push: { teams: { _id: message.teamName, roundPoints: 0 } } })\n        .then(app.webSocketServer.to('QUIZMASTER_ROOM').emit('PENDING', { \n          'message' : `A new team with name: \"${message.teamName}\" and socket id: \"${socket.id}\" is waiting to join the quiznight with code ${socket.nsp.name}` \n        }));\n    });\n\n    socket.on('NEXT_QUESTION', (message) => {\n      \n    });\n  });\n\n  return quiznightNamespace;\n}"]}
>>>>>>> Stashed changes
