{"version":3,"sources":["../../../../src/websockets/messaging/teams/from-teams.js"],"names":["socket","quiznightNamespace","on","CONNECT_TEAM","message","qnCode","saveNewTeamInQuiznightToCache","teamName","then","toNamespace","usingSocket","sendMessageToQuizmaster","TEAM_JOINED","socketId","id","join","TEAMS","SUBMIT_ANSWER","saveAnswerOfTeamInRoundToCache","round","question","answer","ANSWER_SUBMITTED","sendMessageToAllScoreboards","hasAnswered"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,kBAAT,EAAgC;AAC7CD,SAAOE,EAAP,CAAU,wBAAcC,YAAxB,EAAsC,UAACC,OAAD,EAAa;AACjD,QAAIC,SAAS,uCAA2BL,MAA3B,CAAb;AACA,uBACGM,6BADH,CACiCD,MADjC,EACyCD,QAAQG,QADjD,EAEGC,IAFH,CAEQ,YAAM;AACV,6BACGC,WADH,CACeR,kBADf,EAEGS,WAFH,CAEeV,MAFf,EAGGW,uBAHH,CAG2B,wBAAcC,WAHzC,EAGsD;AAClDL,kBAAUH,QAAQG,QADgC;AAElDM,kBAAUb,OAAOc;AAFiC,OAHtD;AAOAd,aAAOe,IAAP,CAAY,gBAAWC,KAAvB;AACD,KAXH;AAYD,GAdD;;AAgBAhB,SAAOE,EAAP,CAAU,wBAAce,aAAxB,EAAuC,UAACb,OAAD,EAAa;AAClD,QAAIC,SAAS,uCAA2BL,MAA3B,CAAb;AACA,uBACGkB,8BADH,CACkCb,MADlC,EAC0CD,QAAQe,KADlD,EACyDf,QAAQG,QADjE,EAC2EH,QAAQgB,QADnF,EAC6FhB,QAAQiB,MADrG,EAEGb,IAFH,CAEQ,YAAM;AACV,6BACGC,WADH,CACeR,kBADf,EAEGS,WAFH,CAEeV,MAFf,EAGGW,uBAHH,CAG2B,wBAAcW,gBAHzC,EAG2D,EAAEF,UAAUhB,QAAQgB,QAApB,EAA8BC,QAAQjB,QAAQiB,MAA9C,EAH3D;;AAKA,6BACGE,2BADH,CAC+B,wBAAcD,gBAD7C,EAC+D,EAAEf,UAAUH,QAAQG,QAApB,EAA8BiB,aAAa,IAA3C,EAD/D;AAED,KAVH;AAWD,GAbD;AAcD,C","file":"from-teams.js","sourcesContent":["import DatabaseCacheHandler from '../../caching/database';\nimport { getQuiznightCodeFromSocket } from '../../utils';\nimport MESSAGE_TYPES from '../../constants/message_types';\nimport QuizmasterMessageSender from '../quizmaster/to-quizmaster';\nimport Quiznight from '../../../models/Quiznight';\nimport ROOM_NAMES from '../../constants/rooms';\nimport ScoreboardMessageSender from '../scoreboard/to-scoreboard';\n\nexport default (socket, quiznightNamespace) => {\n  socket.on(MESSAGE_TYPES.CONNECT_TEAM, (message) => {\n    let qnCode = getQuiznightCodeFromSocket(socket);\n    DatabaseCacheHandler\n      .saveNewTeamInQuiznightToCache(qnCode, message.teamName)\n      .then(() => {\n        QuizmasterMessageSender\n          .toNamespace(quiznightNamespace)\n          .usingSocket(socket)\n          .sendMessageToQuizmaster(MESSAGE_TYPES.TEAM_JOINED, {\n            teamName: message.teamName,\n            socketId: socket.id\n          });\n        socket.join(ROOM_NAMES.TEAMS);\n      });\n  });\n\n  socket.on(MESSAGE_TYPES.SUBMIT_ANSWER, (message) => {\n    let qnCode = getQuiznightCodeFromSocket(socket);\n    DatabaseCacheHandler\n      .saveAnswerOfTeamInRoundToCache(qnCode, message.round, message.teamName, message.question, message.answer)\n      .then(() => {\n        QuizmasterMessageSender\n          .toNamespace(quiznightNamespace)\n          .usingSocket(socket)\n          .sendMessageToQuizmaster(MESSAGE_TYPES.ANSWER_SUBMITTED, { question: message.question, answer: message.answer });\n\n        ScoreboardMessageSender\n          .sendMessageToAllScoreboards(MESSAGE_TYPES.ANSWER_SUBMITTED, { teamName: message.teamName, hasAnswered: true });\n      });\n  });\n}"]}