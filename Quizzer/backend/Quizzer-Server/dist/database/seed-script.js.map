{"version":3,"sources":["../../src/database/seed-script.js"],"names":["console","log","categoryProm","count","then","result","cats","map","cat","forEach","save","catch","err","questionProm","questionModels","question","model","_id","Promise","all"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,YAAM;AACnBA,UAAQC,GAAR,CAAY,0BAAZ;;AAEA,MAAMC,eAAe,mBAASC,KAAT,GAAiBC,IAAjB,CAAsB,kBAAU;AACnD,QAAIC,SAAS,CAAb,EAAgB;AACdL,cAAQC,GAAR,CAAY,wBAAZ;AACA,UAAMK,OAAO,qBAAWC,GAAX,CAAe;AAAA,eAAO,uBAAaC,GAAb,CAAP;AAAA,OAAf,CAAb;AACAF,WAAKG,OAAL,CAAa,eAAO;AAClBD,YAAIE,IAAJ;AACD,OAFD;AAGD,KAND,MAOK;AACHV,cAAQC,GAAR,CAAY,6CAAZ;AACD;AACF,GAXoB,EAWlBU,KAXkB,CAWZ,eAAO;AACdX,YAAQC,GAAR,oDAA6DW,GAA7D;AACD,GAboB,CAArB;;AAeA,MAAMC,eAAe,mBAASV,KAAT,GAAiBC,IAAjB,CAAsB,kBAAU;AACnD,QAAIC,SAAS,CAAb,EAAgB;AACdL,cAAQC,GAAR,CAAY,wBAAZ;AACA,UAAMa,iBAAiB,oBAAUP,GAAV,CAAc;AAAA,eAAY,uBAAaQ,QAAb,CAAZ;AAAA,OAAd,CAAvB;AACAD,qBAAeL,OAAf,CAAuB,iBAAS;AAC9BO,cAAMN,IAAN,GAAaC,KAAb,CAAmB,eAAO;AACxBX,kBAAQC,GAAR,uBAAgCe,MAAMC,GAAtC,UAA8CL,GAA9C;AACD,SAFD;AAGD,OAJD;AAKD,KARD,MASK;AACHZ,cAAQC,GAAR,CAAY,4CAAZ;AACD;AACF,GAboB,EAalBU,KAbkB,CAaZ,eAAO;AACdX,YAAQC,GAAR,mDAA4DW,GAA5D;AACD,GAfoB,CAArB;;AAiBAM,UAAQC,GAAR,CAAY,CAACjB,YAAD,EAAeW,YAAf,CAAZ,EAA0CT,IAA1C,CAA+C,YAAM;AACnDJ,YAAQC,GAAR,CAAY,sBAAZ;AACD,GAFD;AAGD,C","file":"seed-script.js","sourcesContent":["import categories from '../assets/categories';\nimport questions from '../assets/questions';\nimport Question from '../models/Question';\nimport Category from '../models/Category';\n\nexport default () => {\n  console.log('Executing seed script...')\n\n  const categoryProm = Category.count().then(result => {\n    if (result < 1) {\n      console.log(\"Inserting categories..\")\n      const cats = categories.map(cat => new Category(cat));\n      cats.forEach(cat => {\n        cat.save();\n      });\n    }\n    else {\n      console.log(\"SKIP: Inserting categories (already exists)\")\n    }\n  }).catch(err => {\n    console.log(`ERROR: Could not count categories collection. ${err}`)\n  })\n\n  const questionProm = Question.count().then(result => {\n    if (result < 1) {\n      console.log(\"Inserting questions...\")\n      const questionModels = questions.map(question => new Question(question));\n      questionModels.forEach(model => {\n        model.save().catch(err => {\n          console.log(`Could not insert ${model._id}: ${err}`)\n        })\n      })\n    }\n    else {\n      console.log(\"SKIP: Inserting questions (already exists)\")\n    }\n  }).catch(err => {\n    console.log(`ERROR: Could not count questions collection. ${err}`)\n  })\n\n  Promise.all([categoryProm, questionProm]).then(() => {\n    console.log(\"Seed script finished\")\n  });\n}"]}