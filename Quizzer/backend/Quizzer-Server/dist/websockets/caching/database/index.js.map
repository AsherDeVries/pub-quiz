{"version":3,"sources":["../../../../src/websockets/caching/database/index.js"],"names":["DatabaseCacheHandler","saveNewQuiznightRoundToCache","quiznightCode","newRoundNumber","findOne","_id","rounds","then","result","length","update","$push","teamStatistics","teams","quiznight","promises","teamName","p","$elemMatch","team","givenAnswers","correctAnswersAmount","push","Promise","all","removeTeamInQuiznightFromCache","$pull","saveNewTeamInQuiznightToCache","roundPoints","saveAnswerOfTeamInRoundToCache","round","question","answer","console","log","value"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,uBAAuB;AAC3BC,8BAD2B,wCACEC,aADF,EACiB;AAC1C;AACA,QAAIC,iBAAiB,IAArB;;AAEA,WAAO,oBAAUC,OAAV,CAAkB,EAAEC,KAAKH,aAAP,EAAlB,EAA0C,EAAEI,QAAQ,CAAV,EAA1C,EACJC,IADI,CACC,UAACC,MAAD,EAAY;AAChBL,uBAAiBK,OAAOF,MAAP,CAAcG,MAA/B;AACA,aAAO,oBACJC,MADI,CAEH,EAAEL,KAAKH,aAAP,EAFG,EAGH,EAAES,OAAO,EAAEL,QAAQ,EAAED,KAAKF,cAAP,EAAuBS,gBAAgB,EAAvC,EAAV,EAAT,EAHG,CAAP;AAID,KAPI,EAQJL,IARI,CAQC,YAAM;AACV,aAAO,oBAAUH,OAAV,CAAkB,EAAEC,KAAKH,aAAP,EAAlB,EAA0C,EAAEW,OAAO,CAAT,EAA1C,CAAP;AACD,KAVI,EAWJN,IAXI,CAWC,UAACO,SAAD,EAAe;AACnB,UAAIC,WAAW,EAAf;AADmB;AAAA;AAAA;;AAAA;AAEnB,6BAAoBD,UAAUD,KAA9B,8HAAqC;AAAA,cAA7BG,QAA6B;;AACnC,cAAIC,IAAI,oBAAUP,MAAV,CACN,EAAEL,KAAKH,aAAP,EAAsBI,QAAQ,EAAEY,YAAY,EAAEb,KAAKF,cAAP,EAAd,EAA9B,EADM,EAEN,EAAEQ,OAAO,EAAE,2BAA2B,EAAEQ,MAAMH,QAAR,EAAkBI,cAAc,EAAhC,EAAoCC,sBAAsB,CAA1D,EAA7B,EAAT,EAFM,CAAR;AAGAN,mBAASO,IAAT,CAAcL,CAAd;AACD;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQnB,aAAOM,QAAQC,GAAR,CAAYT,QAAZ,CAAP;AACD,KApBI,CAAP;AAqBD,GA1B0B;AA2B3BU,gCA3B2B,0CA2BIvB,aA3BJ,EA2BmBc,QA3BnB,EA2B6B;AACtD,WAAO,oBAAUN,MAAV,CACL,EAAEL,KAAKH,aAAP,EADK,EAEL,EAAEwB,OAAO,EAAEb,OAAO,EAAER,KAAKW,QAAP,EAAT,EAAT,EAFK,CAAP;AAID,GAhC0B;AAiC3BW,+BAjC2B,yCAiCGzB,aAjCH,EAiCkBc,QAjClB,EAiC4B;AACrD,WAAO,oBAAUN,MAAV,CACL,EAAEL,KAAKH,aAAP,EADK,EAEL,EAAES,OAAO,EAAEE,OAAO,EAAER,KAAKW,QAAP,EAAiBY,aAAa,CAA9B,EAAT,EAAT,EAFK,CAAP;AAID,GAtC0B;AAuC3BC,gCAvC2B,0CAuCI3B,aAvCJ,EAuCmB4B,KAvCnB,EAuC0Bd,QAvC1B,EAuCoCe,QAvCpC,EAuC8CC,MAvC9C,EAuCsD;AAC/EC,YAAQC,GAAR,CAAYhC,aAAZ,EAA2B4B,KAA3B,EAAkCd,QAAlC,EAA4Ce,QAA5C,EAAsDC,MAAtD;AACA,WAAO,oBAAUtB,MAAV,CACL,EAAEL,KAAKH,aAAP,EAAsBI,QAAQ,EAAEY,YAAY,EAAEb,KAAKyB,KAAP,EAAd,EAA9B,EAA+D,yBAA0B,EAAEZ,YAAY,EAAEC,MAAMH,QAAR,EAAd,EAAzF,EADK,EAEL,EAAEL,OAAO,EAAE,0CAA0C,EAAEoB,UAAUA,QAAZ,EAAsBI,OAAOH,MAA7B,EAA5C,EAAT,EAFK,CAAP;AAID;AA7C0B,CAA7B;;kBAgDehC,oB","file":"index.js","sourcesContent":["import Quiznight from '../../../models/Quiznight';\n\nconst DatabaseCacheHandler = {\n  saveNewQuiznightRoundToCache(quiznightCode) {\n    // YEAH... QUICK AND DIRTY\n    let newRoundNumber = null;\n\n    return Quiznight.findOne({ _id: quiznightCode }, { rounds: 1 })\n      .then((result) => {\n        newRoundNumber = result.rounds.length;\n        return Quiznight\n          .update(\n            { _id: quiznightCode },\n            { $push: { rounds: { _id: newRoundNumber, teamStatistics: [] } } });\n      })\n      .then(() => {\n        return Quiznight.findOne({ _id: quiznightCode }, { teams: 1 });\n      })\n      .then((quiznight) => {\n        let promises = [];\n        for(let teamName of quiznight.teams) {\n          let p = Quiznight.update(\n            { _id: quiznightCode, rounds: { $elemMatch: { _id: newRoundNumber } } },\n            { $push: { \"rounds.0.teamStatistics\": { team: teamName, givenAnswers: [], correctAnswersAmount: 0 } } })\n          promises.push(p);\n        }\n        return Promise.all(promises);\n      });\n  },\n  removeTeamInQuiznightFromCache(quiznightCode, teamName) {\n    return Quiznight.update(\n      { _id: quiznightCode },\n      { $pull: { teams: { _id: teamName } } }\n    );\n  },\n  saveNewTeamInQuiznightToCache(quiznightCode, teamName) {\n    return Quiznight.update(\n      { _id: quiznightCode },\n      { $push: { teams: { _id: teamName, roundPoints: 0 } } }\n    );\n  },\n  saveAnswerOfTeamInRoundToCache(quiznightCode, round, teamName, question, answer) {\n    console.log(quiznightCode, round, teamName, question, answer);\n    return Quiznight.update(\n      { _id: quiznightCode, rounds: { $elemMatch: { _id: round } },  \"rounds.teamStatistics\" : { $elemMatch: { team: teamName } } },\n      { $push: { \"rounds.0.teamStatistics.0.givenAnswers\": { question: question, value: answer } } }\n    );\n  }\n};\n\nexport default DatabaseCacheHandler;"]}