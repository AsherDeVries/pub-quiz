{"version":3,"sources":["../../src/routes/quiznightRoutes.js"],"names":["quiznightRoute","post","req","res","quiznightCode","generate","length","charset","qn","_id","teams","rounds","addQuiznightToCache","save","then","send","code","params","quiznightId","body","forEach","element","hasBeenReviewed","update","$push","chosenQuestions","get","find","data"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;kBAEe,YAAM;AACnB,MAAIA,iBAAiB,sBAArB;;AAEAA,iBAAeC,IAAf,CAAoB,GAApB,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;;AAEpC,QAAIC,gBAAgB,uBAAaC,QAAb,CAAsB;AACxCC,cAAQ,CADgC;AAExCC,eAAS;AAF+B,KAAtB,CAApB;;AAKA,QAAIC,KAAK,wBAAc;AACrBC,WAAKL,aADgB;AAErBM,aAAO,EAFc;AAGrBC,cAAQ;AAHa,KAAd,CAAT;;AAMA,0BACEC,mBADF,CACsBR,aADtB;;AAGA,0DAAqCA,aAArC;AACAI,OAAGK,IAAH,GACEC,IADF,CACO,YAAM;AACV,aAAOX,IAAIY,IAAJ,CAAS,EAAEC,MAAMZ,aAAR,EAAT,CAAP;AACD,KAHF;AAIF,GArBD;;AAuBAJ,iBAAeC,IAAf,CAAoB,sBAApB,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxD,QAAID,IAAIe,MAAJ,CAAWC,WAAf,EAA4B;;AAE1BhB,UAAIiB,IAAJ,CAASC,OAAT,CAAiB,mBAAW;AAC1BC,gBAAQC,eAAR,GAA0B,KAA1B;AACD,OAFD;;AAIA,0BAAUC,MAAV,CACE,EAAEd,KAAKP,IAAIe,MAAJ,CAAWC,WAAlB,EADF,EAEE;AACEM,eAAO;AACLb,kBAAQ;AACNc,6BAAiBvB,IAAIiB;AADf;AADH;AADT,OAFF,EASEL,IATF,CASO;AAAA,eAAQX,IAAIY,IAAJ,CAAS,OAAT,CAAR;AAAA,OATP;AAUD;AACF,GAlBD;;AAoBAf,iBAAe0B,GAAf,CAAmB,GAAnB,EAAwB,UAACxB,GAAD,EAAMC,GAAN,EAAc;AACpC,wBAAUwB,IAAV,CAAe,EAAf,EAAmBb,IAAnB,CAAwB,gBAAQ;AAC9B,aAAOX,IAAIY,IAAJ,CAASa,IAAT,CAAP;AACD,KAFD;AAGD,GAJD;;AAMA,SAAO5B,cAAP;AACD,C","file":"quiznightRoutes.js","sourcesContent":["import { version } from '../../package.json';\nimport { Router } from 'express';\n\nimport QuestionModel from '../models/Question';\nimport Quiznight from '../models/Quiznight';\nimport randomstring from 'randomstring';\nimport { createWebsocketNamespaceForQuiznight } from '../websockets';\nimport TeamWebsocketConnectionsCacheHandler from '../websockets/caching/connections';\n\nexport default () => {\n  let quiznightRoute = Router();\n  \n  quiznightRoute.post('/', (req, res) => {\n\n     let quiznightCode = randomstring.generate({\n       length: 6,\n       charset: 'alphanumeric'\n     });\n\n     let qn = new Quiznight({\n       _id: quiznightCode,\n       teams: [],\n       rounds: []\n     });\n \n     TeamWebsocketConnectionsCacheHandler\n      .addQuiznightToCache(quiznightCode);\n\n     createWebsocketNamespaceForQuiznight(quiznightCode);\n     qn.save()\n      .then(() => {\n        return res.send({ code: quiznightCode })\n      });\n  });\n\n  quiznightRoute.post('/:quiznightId/rounds', (req, res) => {\n    if (req.params.quiznightId) {\n      \n      req.body.forEach(element => {\n        element.hasBeenReviewed = false;\n      });\n\n      Quiznight.update(\n        { _id: req.params.quiznightId },\n        { \n          $push: {\n            rounds: {\n              chosenQuestions: req.body,\n            }\n          }\n        } \n      ).then(data => res.send(\"saved\"))\n    }\n  });\n\n  quiznightRoute.get('/', (req, res) => {\n    Quiznight.find({}).then(data => {\n      return res.send(data);\n    })\n  })\n\n  return quiznightRoute;\n}"]}