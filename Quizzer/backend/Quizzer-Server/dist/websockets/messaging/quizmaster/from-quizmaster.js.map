{"version":3,"sources":["../../../../src/websockets/messaging/quizmaster/from-quizmaster.js"],"names":["socket","quiznightNamespace","on","CONNECT_QUIZMASTER","message","join","QUIZMASTER","toNamespace","usingSocket","sendMessage","PENDING","ACCEPT_TEAM","messageToTeam","isAccepted","qnCode","removeTeamInQuiznightFromCache","teamName","then","disconnectSocket","socketId","console","log","sendMessageToSocketViaId","TEAM_ALLOWED","START_ROUND","saveNewQuiznightRoundToCache","result","sendMessageToAllTeams","NEXT_QUESTION","NEW_QUESTION","question","CLOSE_QUESTION","UPDATE_SCORE","to","socket_id","emit","ANSWER_REVIEWED","isCorrect","answer","END_ROUND","END_GAME"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,kBAAT,EAAgC;;AAE7CD,SAAOE,EAAP,CAAU,wBAAcC,kBAAxB,EAA4C,UAACC,OAAD,EAAa;AACvDJ,WAAOK,IAAP,CAAY,gBAAWC,UAAvB;;AAEA,2BACGC,WADH,CACeN,kBADf,EAEGO,WAFH,CAEeR,MAFf,EAGGS,WAHH,CAGe,wBAAcC,OAH7B,EAGsC,oEAHtC;AAID,GAPD;;AASAV,SAAOE,EAAP,CAAU,wBAAcS,WAAxB,EAAqC,UAACP,OAAD,EAAa;AAChD,QAAIQ,gBAAgB,EAAEC,YAAYT,QAAQS,UAAtB,EAApB;AACA,QAAG,CAACD,cAAcC,UAAlB,EAA8B;AAC5B,UAAIC,SAAS,uCAA2Bd,MAA3B,CAAb;AACA,yBACGe,8BADH,CACkCD,MADlC,EAC0CV,QAAQY,QADlD,EAECC,IAFD,CAEM,kBAAkBC,gBAAlB,CAAmCd,QAAQe,QAA3C,CAFN;AAGD,KALD,MAKO;AACLC,cAAQC,GAAR,CAAYT,aAAZ;AACA,wBACGL,WADH,CACeN,kBADf,EAEGO,WAFH,CAEeR,MAFf,EAGGsB,wBAHH,CAG4BlB,QAAQe,QAHpC,EAG8C,wBAAcI,YAH5D,EAG0EX,aAH1E;AAID;AACF,GAdD;;AAgBAZ,SAAOE,EAAP,CAAU,wBAAcsB,WAAxB,EAAqC,UAACpB,OAAD,EAAa;AAChD,QAAIU,SAAS,uCAA2Bd,MAA3B,CAAb;AACA,uBACGyB,4BADH,CACgCX,MADhC,EAEGG,IAFH,CAEQ,UAACS,MAAD,EAAY;AAChB,wBACGnB,WADH,CACeN,kBADf,EAEGO,WAFH,CAEeR,MAFf,EAGG2B,qBAHH,CAGyB,wBAAcjB,OAHvC,EAGgD,+CAHhD;AAID,KAPH;AAQD,GAVD;;AAYAV,SAAOE,EAAP,CAAU,wBAAc0B,aAAxB,EAAuC,UAACxB,OAAD,EAAa;AAClD,sBACGG,WADH,CACeN,kBADf,EAEGO,WAFH,CAEeR,MAFf,EAGG2B,qBAHH,CAGyB,wBAAcE,YAHvC,EAGqD,EAAEC,UAAU1B,QAAQ0B,QAApB,EAHrD;AAID,GALD;;AAOA9B,SAAOE,EAAP,CAAU,wBAAc6B,cAAxB,EAAwC,UAAC3B,OAAD,EAAa;AACnD,sBACGG,WADH,CACeN,kBADf,EAEGO,WAFH,CAEeR,MAFf,EAGG2B,qBAHH,CAGyB,wBAAcjB,OAHvC,EAGgD,4CAHhD;AAIA;AACA;AACD,GAPD;;AASAV,SAAOE,EAAP,CAAU,wBAAc8B,YAAxB,EAAsC,UAAC5B,OAAD,EAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,uBAAmBgC,EAAnB,CAAsB7B,QAAQ8B,SAA9B,EAAyCC,IAAzC,CAA8C,wBAAcC,eAA5D,EAA6E,EAAEC,WAAWjC,QAAQkC,MAArB,EAA7E;AACArC,uBAAmBgC,EAAnB,CAAsB,gBAAW3B,UAAjC,EAA6C6B,IAA7C,CAAkD,wBAAcC,eAAhE,EAAiF,EAAEN,UAAU1B,QAAQ0B,QAApB,EAA8BQ,QAAQlC,QAAQkC,MAA9C,EAAjF;AACD,GAbD;;AAeAtC,SAAOE,EAAP,CAAU,wBAAcqC,SAAxB,EAAmC,UAACnC,OAAD,EAAa;AAC9C;AACA;AACD,GAHD;;AAKAJ,SAAOE,EAAP,CAAU,wBAAcsC,QAAxB,EAAkC,UAACpC,OAAD,EAAa;AAC7C;AACA;AACD,GAHD;AAID,C","file":"from-quizmaster.js","sourcesContent":["import DatabaseCacheHandler from '../../caching/database';\nimport { getQuiznightCodeFromSocket } from '../../utils';\nimport MESSAGE_TYPES from '../../constants/message_types';\nimport QuizmasterMessageSender from '../quizmaster/to-quizmaster';\nimport Quiznight from '../../../models/Quiznight';\nimport ROOM_NAMES from '../../constants/rooms';\nimport TeamMessageSender from '../teams/to-teams';\n\nexport default (socket, quiznightNamespace) => {\n\n  socket.on(MESSAGE_TYPES.CONNECT_QUIZMASTER, (message) => {\n    socket.join(ROOM_NAMES.QUIZMASTER);\n\n    QuizmasterMessageSender\n      .toNamespace(quiznightNamespace)\n      .usingSocket(socket)\n      .sendMessage(MESSAGE_TYPES.PENDING, 'Welcome to the quiznight quizmaster!, waiting for teams to apply..')\n  });\n\n  socket.on(MESSAGE_TYPES.ACCEPT_TEAM, (message) => {\n    let messageToTeam = { isAccepted: message.isAccepted };\n    if(!messageToTeam.isAccepted) {\n      let qnCode = getQuiznightCodeFromSocket(socket);\n      DatabaseCacheHandler\n        .removeTeamInQuiznightFromCache(qnCode, message.teamName)\n      .then(TeamMessageSender.disconnectSocket(message.socketId));\n    } else {\n      console.log(messageToTeam);\n      TeamMessageSender\n        .toNamespace(quiznightNamespace)\n        .usingSocket(socket)\n        .sendMessageToSocketViaId(message.socketId, MESSAGE_TYPES.TEAM_ALLOWED, messageToTeam);\n    }\n  });\n\n  socket.on(MESSAGE_TYPES.START_ROUND, (message) => {\n    let qnCode = getQuiznightCodeFromSocket(socket);\n    DatabaseCacheHandler\n      .saveNewQuiznightRoundToCache(qnCode)\n      .then((result) => {\n        TeamMessageSender\n          .toNamespace(quiznightNamespace)\n          .usingSocket(socket)\n          .sendMessageToAllTeams(MESSAGE_TYPES.PENDING, 'Round has started, waiting for next question.')\n      });\n  });\n\n  socket.on(MESSAGE_TYPES.NEXT_QUESTION, (message) => {\n    TeamMessageSender\n      .toNamespace(quiznightNamespace)\n      .usingSocket(socket)\n      .sendMessageToAllTeams(MESSAGE_TYPES.NEW_QUESTION, { question: message.question });\n  });\n\n  socket.on(MESSAGE_TYPES.CLOSE_QUESTION, (message) => {\n    TeamMessageSender\n      .toNamespace(quiznightNamespace)\n      .usingSocket(socket)\n      .sendMessageToAllTeams(MESSAGE_TYPES.PENDING, 'Quizmaster is currently reviewing answers.');\n    //quiznightNamespace.to(ROOM_NAMES.TEAMS).emit(MESSAGE_TYPES.QUESTION_CLOSED, { question: message.question, givenAnswers: db.givenAnswers })    \n    // WANNEER MOET SCOREBOARD GEINFORMEERD WORDEN OVER ANTWOORDEN VAN TEAMS??\n  });\n\n  socket.on(MESSAGE_TYPES.UPDATE_SCORE, (message) => {\n    // message.question\n    // message.givenAnswers: [\n    // teamName: String,\n    // answer: String\n    // isCorrect: Boolean\n    //]\n    // Loop door lijst met teams\n    // 1. Informeer over antwoord review\n    // 2. Zet aantal goede antwoorden per team in db.\n    // 3. Zet question op gereviewed in db\n    quiznightNamespace.to(message.socket_id).emit(MESSAGE_TYPES.ANSWER_REVIEWED, { isCorrect: message.answer })\n    quiznightNamespace.to(ROOM_NAMES.QUIZMASTER).emit(MESSAGE_TYPES.ANSWER_REVIEWED, { question: message.question, answer: message.answer })\n  });\n\n  socket.on(MESSAGE_TYPES.END_ROUND, (message) => {\n    // Loop door lijst met teams\n    // 1. update roundpoints in database\n  });\n\n  socket.on(MESSAGE_TYPES.END_GAME, (message) => {\n    // Loop door lijst met teams\n    // 1. update roundpoints in database\n  });\n}"]}